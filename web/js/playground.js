/* 
 * App specific functions.  This is for unique functionality and application initialization.  
 */


// Identify playground configuration.  Will be available as github CDN.
import { default as PLAYGROUND } from 'https://centerfordigitalhumanities.github.io/rerum-playground/blueprints.js'
    
// Playground scripting utilities.  Will be available as github CDN.
import { default as UTILS } from 'https://centerfordigitalhumanities.github.io/rerum-playground/utilities.js'

/**
 * 
 * @param {type} elem
 * @param {type} viewURL
 * @param {type} data
 * @returns {undefined}
 */
function initializeView(elem, viewURL, data) {
    //fetch view HTML from URL
    //Do playground magic on it (apply header, footer, and utilities)
}

function initializePlaygroundCatalog(config) {
    return new Promise((res) => {
        const setContainer = document.getElementById("equiptmentSet")
        Array.from(config.REGISTRY).forEach(thumbnailGenerator => {
            setContainer.innerHTML += thumbnailGenerator()
        })
        UTILS.broadcast(undefined, PLAYGROUND.EVENTS.LOADED, setContainer, {})
        /**
         * Really each render should be a promise and we should return a Promise.all() here of some kind.
         * That would only work if PlaygroundRender resulted in a Promise where we could return Promise.all(renderPromises).
         */
        setTimeout(res, 200) //A small hack to ensure all the HTML generated by processing the views enters the DOM before this says it has resolved.
    })
}


    
    